{"ast":null,"code":"var _jsxFileName = \"C:\\\\Entrance\\\\B-Programming\\\\PaoApp\\\\WelcomeScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SCREEN_WIDTH = Dimensions.get('window').width;\nconst SCREEN_HEIGHT = Dimensions.get('window').height;\nexport default function WelcomeScreen({\n  onPress\n}) {\n  const [gameStarted, setGameStarted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [lives, setLives] = useState(3);\n  const shipPosition = new Animated.ValueXY({\n    x: SCREEN_WIDTH / 2 - 30,\n    y: SCREEN_HEIGHT - 100\n  });\n  const [obstacles, setObstacles] = useState([]);\n  const [collectibles, setCollectibles] = useState([]);\n  const panResponder = PanResponder.create({\n    onStartShouldSetPanResponder: () => true,\n    onPanResponderMove: (evt, gestureState) => {\n      let newX = shipPosition.x._value + gestureState.dx;\n      if (newX < 0) newX = 0;\n      if (newX > SCREEN_WIDTH - 60) newX = SCREEN_WIDTH - 60;\n      shipPosition.setValue({\n        x: newX,\n        y: shipPosition.y._value\n      });\n    }\n  });\n  useEffect(() => {\n    if (gameStarted) {\n      const gameLoop = setInterval(() => {\n        moveObstacles();\n        spawnObstacles();\n        checkCollisions();\n      }, 16);\n      return () => clearInterval(gameLoop);\n    }\n  }, [gameStarted]);\n  const spawnObstacles = () => {\n    if (Math.random() < 0.02) {\n      const newObstacle = {\n        id: Date.now(),\n        x: Math.random() * (SCREEN_WIDTH - 30),\n        y: -30,\n        type: Math.random() < 0.3 ? 'collectible' : 'obstacle'\n      };\n      if (newObstacle.type === 'collectible') {\n        setCollectibles(prev => [...prev, newObstacle]);\n      } else {\n        setObstacles(prev => [...prev, newObstacle]);\n      }\n    }\n  };\n  return _jsxDEV(ImageBackground, {\n    source: require('./assets/space-background.jpg'),\n    style: styles.backgroundImage,\n    children: !gameStarted ? _jsxDEV(View, {\n      style: styles.overlay,\n      children: [_jsxDEV(Text, {\n        style: styles.welcomeText,\n        children: \"\\u592A\\u7A7A\\u8C93\\u54AA\\u5192\\u96AA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), _jsxDEV(Button, {\n        title: \"\\u958B\\u59CB\\u904A\\u6232\",\n        onPress: () => setGameStarted(true),\n        color: \"#841584\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : _jsxDEV(View, {\n      style: styles.gameContainer,\n      children: [_jsxDEV(View, {\n        style: styles.statusBar,\n        children: [_jsxDEV(Text, {\n          style: styles.scoreText,\n          children: [\"\\u5206\\u6578: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.livesText,\n          children: \"\\u2764\\uFE0F\\\".repeat(lives)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), obstacles.map(obstacle => _jsxDEV(Image, {\n        source: require('./assets/meteor.png'),\n        style: [styles.obstacle, {\n          left: obstacle.x,\n          top: obstacle.y\n        }]\n      }, obstacle.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)), collectibles.map(collectible => _jsxDEV(Image, {\n        source: require('./assets/fishbone.png'),\n        style: [styles.collectible, {\n          left: collectible.x,\n          top: collectible.y\n        }]\n      }, collectible.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)), _jsxDEV(Animated.Image, Object.assign({}, panResponder.panHandlers, {\n        source: require('./assets/cat-ship.png'),\n        style: [styles.ship, shipPosition.getLayout()]\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  overlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0,0,0,0.5)'\n  },\n  welcomeText: {\n    fontSize: 40,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 30,\n    textShadowColor: '#000',\n    textShadowOffset: {\n      width: 2,\n      height: 2\n    },\n    textShadowRadius: 10\n  },\n  gameContainer: {\n    flex: 1\n  },\n  statusBar: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 20\n  },\n  scoreText: {\n    fontSize: 24,\n    color: '#fff',\n    fontWeight: 'bold'\n  },\n  livesText: {\n    fontSize: 24,\n    color: '#fff'\n  },\n  ship: {\n    width: 60,\n    height: 60,\n    position: 'absolute'\n  },\n  obstacle: {\n    width: 30,\n    height: 30,\n    position: 'absolute'\n  },\n  collectible: {\n    width: 25,\n    height: 25,\n    position: 'absolute'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","ImageBackground","Button","Dimensions","PanResponder","Animated","Image","jsxDEV","_jsxDEV","SCREEN_WIDTH","get","width","SCREEN_HEIGHT","height","WelcomeScreen","onPress","gameStarted","setGameStarted","score","setScore","lives","setLives","shipPosition","ValueXY","x","y","obstacles","setObstacles","collectibles","setCollectibles","panResponder","create","onStartShouldSetPanResponder","onPanResponderMove","evt","gestureState","newX","_value","dx","setValue","gameLoop","setInterval","moveObstacles","spawnObstacles","checkCollisions","clearInterval","Math","random","newObstacle","id","Date","now","type","prev","source","require","style","styles","backgroundImage","children","overlay","welcomeText","fileName","_jsxFileName","lineNumber","columnNumber","title","color","gameContainer","statusBar","scoreText","livesText","map","obstacle","left","top","collectible","Object","assign","panHandlers","ship","getLayout","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginBottom","textShadowColor","textShadowOffset","textShadowRadius","flexDirection","padding","position"],"sources":["C:/Entrance/B-Programming/PaoApp/WelcomeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  StyleSheet, \r\n  Text, \r\n  View, \r\n  ImageBackground, \r\n  Button,\r\n  Dimensions,\r\n  PanResponder,\r\n  Animated,\r\n  Image\r\n} from 'react-native';\r\n\r\nconst SCREEN_WIDTH = Dimensions.get('window').width;\r\nconst SCREEN_HEIGHT = Dimensions.get('window').height;\r\n\r\nexport default function WelcomeScreen({ onPress }) {\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [lives, setLives] = useState(3);\r\n  const shipPosition = new Animated.ValueXY({ x: SCREEN_WIDTH/2 - 30, y: SCREEN_HEIGHT - 100 });\r\n  const [obstacles, setObstacles] = useState([]);\r\n  const [collectibles, setCollectibles] = useState([]);\r\n\r\n  const panResponder = PanResponder.create({\r\n    onStartShouldSetPanResponder: () => true,\r\n    onPanResponderMove: (evt, gestureState) => {\r\n      let newX = shipPosition.x._value + gestureState.dx;\r\n      if (newX < 0) newX = 0;\r\n      if (newX > SCREEN_WIDTH - 60) newX = SCREEN_WIDTH - 60;\r\n      shipPosition.setValue({ x: newX, y: shipPosition.y._value });\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (gameStarted) {\r\n      const gameLoop = setInterval(() => {\r\n        moveObstacles();\r\n        spawnObstacles();\r\n        checkCollisions();\r\n      }, 16);\r\n      return () => clearInterval(gameLoop);\r\n    }\r\n  }, [gameStarted]);\r\n\r\n  const spawnObstacles = () => {\r\n    if (Math.random() < 0.02) {\r\n      const newObstacle = {\r\n        id: Date.now(),\r\n        x: Math.random() * (SCREEN_WIDTH - 30),\r\n        y: -30,\r\n        type: Math.random() < 0.3 ? 'collectible' : 'obstacle'\r\n      };\r\n      if (newObstacle.type === 'collectible') {\r\n        setCollectibles(prev => [...prev, newObstacle]);\r\n      } else {\r\n        setObstacles(prev => [...prev, newObstacle]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ImageBackground \r\n      source={require('./assets/space-background.jpg')} \r\n      style={styles.backgroundImage}\r\n    >\r\n      {!gameStarted ? (\r\n        <View style={styles.overlay}>\r\n          <Text style={styles.welcomeText}>太空貓咪冒險</Text>\r\n          <Button \r\n            title=\"開始遊戲\" \r\n            onPress={() => setGameStarted(true)} \r\n            color=\"#841584\" \r\n          />\r\n        </View>\r\n      ) : (\r\n        <View style={styles.gameContainer}>\r\n          <View style={styles.statusBar}>\r\n            <Text style={styles.scoreText}>分數: {score}</Text>\r\n            <Text style={styles.livesText}>❤️\".repeat(lives)</Text>\r\n          </View>\r\n          \r\n          {obstacles.map(obstacle => (\r\n            <Image \r\n              key={obstacle.id}\r\n              source={require('./assets/meteor.png')}\r\n              style={[styles.obstacle, { left: obstacle.x, top: obstacle.y }]}\r\n            />\r\n          ))}\r\n          \r\n          {collectibles.map(collectible => (\r\n            <Image \r\n              key={collectible.id}\r\n              source={require('./assets/fishbone.png')}\r\n              style={[styles.collectible, { left: collectible.x, top: collectible.y }]}\r\n            />\r\n          ))}\r\n          \r\n          <Animated.Image \r\n            {...panResponder.panHandlers}\r\n            source={require('./assets/cat-ship.png')}\r\n            style={[styles.ship, shipPosition.getLayout()]} \r\n          />\r\n        </View>\r\n      )}\r\n    </ImageBackground>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  backgroundImage: {\r\n    flex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  overlay: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n  },\r\n  welcomeText: {\r\n    fontSize: 40,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginBottom: 30,\r\n    textShadowColor: '#000',\r\n    textShadowOffset: { width: 2, height: 2 },\r\n    textShadowRadius: 10,\r\n  },\r\n  gameContainer: {\r\n    flex: 1,\r\n  },\r\n  statusBar: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    padding: 20,\r\n  },\r\n  scoreText: {\r\n    fontSize: 24,\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n  },\r\n  livesText: {\r\n    fontSize: 24,\r\n    color: '#fff',\r\n  },\r\n  ship: {\r\n    width: 60,\r\n    height: 60,\r\n    position: 'absolute',\r\n  },\r\n  obstacle: {\r\n    width: 30,\r\n    height: 30,\r\n    position: 'absolute',\r\n  },\r\n  collectible: {\r\n    width: 25,\r\n    height: 25,\r\n    position: 'absolute',\r\n  }\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}